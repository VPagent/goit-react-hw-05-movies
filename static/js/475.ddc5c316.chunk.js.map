{"version":3,"file":"static/js/475.ddc5c316.chunk.js","mappings":"8LACA,EAAuB,wBAAvB,EAAsD,wBAAtD,EAAqF,wB,SCgBrF,EAZkB,SAAC,GAAe,IAAdA,EAAa,EAAbA,QAEVC,GAAWC,EAAAA,EAAAA,MACjB,OACI,eAAIC,UAAWC,EAAf,SACKJ,EAAQK,OAAS,GAAKL,EAAQM,KAAI,SAAAC,GAAI,OACtC,eAAkBJ,UAAWC,EAA7B,UAAqC,SAAC,KAAD,CAAMI,GAAE,kBAAaD,EAAKE,IAAMC,MAAO,CAACC,KAAMV,GAAUE,UAAWC,EAAnE,SAA4EG,EAAKK,SAA7GL,EAAKE,GADwB,KAKlD,C,2MCbKI,EAAc,mCACPC,EAAe,mCAAG,6FACrBC,EADqB,kEAC6CF,GAD7C,kBAGAG,IAAAA,IAAUD,GAHV,cAGjBE,EAHiB,yBAIhBA,EAASC,KAAKC,SAJE,gCAKpBC,QAAQC,IAAI,SALQ,yDAAH,qDAQfC,EAAc,mCAAG,WAAOC,GAAP,gFACpBR,EADoB,4DACwCF,EADxC,iCAC4EU,EAD5E,iDAGCP,IAAAA,IAAUD,GAHX,cAGhBE,EAHgB,yBAIfA,EAASC,KAAKC,SAJC,gCAKnBC,QAAQC,IAAI,SALO,yDAAH,sDAQdG,EAAW,mCAAG,WAAOf,GAAP,gFACjBM,EADiB,6CAC4BN,EAD5B,oBAC0CI,EAD1C,qCAGIG,IAAAA,IAAUD,GAHd,cAGbE,EAHa,yBAIZA,EAASC,MAJG,gCAKhBE,QAAQC,IAAI,SALI,yDAAH,sDAQXI,EAAS,mCAAG,WAAOhB,GAAP,gFACfM,EADe,6CAC8BN,EAD9B,4BACoDI,EADpD,qCAGMG,IAAAA,IAAUD,GAHhB,cAGXE,EAHW,yBAIVA,EAASC,KAAKQ,MAJJ,gCAKdN,QAAQC,IAAI,SALE,yDAAH,sDAQTM,EAAY,mCAAG,WAAOlB,GAAP,gFAClBM,EADkB,6CAC2BN,EAD3B,4BACiDI,EADjD,4CAGGG,IAAAA,IAAUD,GAHb,cAGdE,EAHc,yBAIbA,EAASC,KAAKC,SAJD,gCAKjBC,QAAQC,IAAI,SALK,yDAAH,qD,qGClCzB,EAAuB,yBAAvB,EAAwD,0BAAxD,EAAwF,wB,SCwBxF,EArBmB,SAAC,GAAsB,IAApBO,EAAmB,EAAnBA,aACpB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SAC/B,GAAkCC,EAAAA,EAAAA,UAASF,GAAS,IAApD,eAAOG,EAAP,KAAkBC,EAAlB,KAWA,OACE,kBAAMC,OAAO,GAAGC,SANG,SAAAC,GACnBA,EAAMC,iBACNZ,EAAaO,GACbJ,EAAgBI,EAAY,CAACH,MAAOG,GAAa,GAClD,EAEyChC,UAAWC,EAAnD,WACE,kBAAOqC,KAAK,OAAOC,SAXF,SAAAH,GACnBH,EAAaG,EAAMI,OAAOpB,MAC3B,EAS8CA,MAAOY,EAAWhC,UAAWC,KACxE,mBAAQqC,KAAK,SAAStC,UAAWC,EAAjC,sBAGL,E,oBCQD,EA1Be,WACb,OAAuByB,EAAAA,EAAAA,MACjBG,GADN,eAC2BC,IAAI,SAE/B,GAA4BC,EAAAA,EAAAA,UAASF,GAArC,eAAOY,EAAP,KAAeC,EAAf,KACA,GAAsCX,EAAAA,EAAAA,UAAS,IAA/C,eAAOY,EAAP,KAAoBC,EAApB,MAEAC,EAAAA,EAAAA,YAAU,WACHJ,IAGLtB,EAAAA,EAAAA,IAAesB,GAAQK,KAAKF,EAC7B,GAAE,CAACH,IAMJ,OACE,iCACE,SAAC,EAAD,CAAYhB,aANK,SAAAL,GACnBsB,EAAUtB,EACX,KAKG,SAAC2B,EAAA,EAAD,CAAWlD,QAAS8C,MAGzB,C","sources":["webpack://react-homework-template/./src/components/FilmsList/filmsList.module.css?5d6b","components/FilmsList/FilmsList.jsx","components/services/API.jsx","webpack://react-homework-template/./src/components/SearchForm/searchForm.module.scss?0049","components/SearchForm/SearchForm.jsx","pages/moviesPage/MoviesPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"filmsList_list__qDNEN\",\"link\":\"filmsList_link__MJ0iJ\",\"item\":\"filmsList_item__+nUYs\"};","import { Link,  useLocation } from \"react-router-dom\"\nimport s from '../FilmsList/filmsList.module.css'\n\n\n\nconst FilmsList = ({options}) => {\n    \n    const location = useLocation()\n    return(\n        <ul className={s.list}>\n            {options.length > 0 && options.map(film =>\n             <li key={film.id} className={s.item}><Link to={`/movies/${film.id}`} state={{prev: location}}className={s.link}>{film.title}</Link></li>\n             )}\n        </ul>\n    )\n}\n\nexport default FilmsList","import axios from 'axios'\n\nconst PRIVATE_KEY = \"19058b9145b7ba2d69dc054625243cc3\"\nexport const fetchTrendFimls = async () => {\n    const link = `https://api.themoviedb.org/3/trending/movie/day?api_key=${PRIVATE_KEY}`\n    try{\n        const response = await axios.get(link)\n        return response.data.results\n    }catch{console.log(\"Error\")}\n}   \n\nexport const fetchQueryFilm = async (value) => {\n    const link = `https://api.themoviedb.org/3/search/movie?api_key=${PRIVATE_KEY}&language=en-US&query=${value}&page=1&include_adult=false`\n    try{\n        const response = await axios.get(link)\n        return response.data.results\n    }catch{console.log(\"Error\")}\n}\n\nexport const fetchFilmId = async (id) => {\n    const link = `https://api.themoviedb.org/3/movie/${id}?api_key=${PRIVATE_KEY}&language=en-US`\n    try{\n        const response = await axios.get(link)\n        return response.data\n    }catch{console.log(\"Error\")}\n}\n\nexport const fetchCast = async (id) => {\n    const link = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${PRIVATE_KEY}&language=en-US`\n    try{\n        const response = await axios.get(link)\n        return response.data.cast\n    }catch{console.log(\"Error\")}\n}\n\nexport const fetchReviews = async (id) => {\n    const link = `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${PRIVATE_KEY}&language=en-US&page=1`\n    try{\n        const response = await axios.get(link)\n        return response.data.results\n    }catch{console.log(\"Error\")}\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"searchForm_form__nfCSi\",\"input\":\"searchForm_input__hJLqp\",\"btn\":\"searchForm_btn__5ouCn\"};","import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport s from '../SearchForm/searchForm.module.scss'\n\nconst SearchForm = ({ onSubmitForm }) => {\n  const [searchParams, setSearchParams] = useSearchParams()\n  const query = searchParams.get(\"query\")\n  const [formValue, setFormValue] = useState(query || \"\");\n\n  const handleChange = event => {\n    setFormValue(event.target.value);\n  };\n\n  const handleSabmit = event => {\n    event.preventDefault();\n    onSubmitForm(formValue);\n    setSearchParams(formValue ? {query: formValue} : \"\")\n  };\n  return (\n    <form action=\"\" onSubmit={handleSabmit} className={s.form}>\n      <input type=\"text\" onChange={handleChange} value={formValue} className={s.input}/>\n      <button type=\"submit\" className={s.btn}>Search</button>\n    </form>\n  );\n};\nexport default SearchForm;\n","import { useEffect, useState } from 'react';\nimport SearchForm from 'components/SearchForm';\nimport { fetchQueryFilm } from 'components/services/API';\nimport FilmsList from 'components/FilmsList';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  const [filter, setFilter] = useState(query);\n  const [findedFilms, setFindedFilms] = useState([]);\n\n  useEffect(() => {\n    if (!filter) {\n      return;\n    }\n    fetchQueryFilm(filter).then(setFindedFilms);\n  }, [filter]);\n\n  const handleSubmit = value => {\n    setFilter(value);\n  };\n\n  return (\n    <>\n      <SearchForm onSubmitForm={handleSubmit} />\n      <FilmsList options={findedFilms} />\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["options","location","useLocation","className","s","length","map","film","to","id","state","prev","title","PRIVATE_KEY","fetchTrendFimls","link","axios","response","data","results","console","log","fetchQueryFilm","value","fetchFilmId","fetchCast","cast","fetchReviews","onSubmitForm","useSearchParams","searchParams","setSearchParams","query","get","useState","formValue","setFormValue","action","onSubmit","event","preventDefault","type","onChange","target","filter","setFilter","findedFilms","setFindedFilms","useEffect","then","FilmsList"],"sourceRoot":""}