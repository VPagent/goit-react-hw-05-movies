{"version":3,"file":"static/js/793.a254e80f.chunk.js","mappings":"8LACA,EAA4B,6BAA5B,EAAgE,wBAAhE,EAA+F,wBAA/F,EAA8H,wBAA9H,EAAoK,+B,SC+BpK,EA3BkB,SAAC,GAAe,IAAdA,EAAa,EAAbA,QAEVC,GAAWC,EAAAA,EAAAA,MACjB,OACI,gBAAKC,UAAWC,EAAhB,UACA,eAAID,UAAWC,EAAf,SACKJ,EAAQK,OAAS,GAAKL,EAAQM,KAAI,SAAAC,GAC/B,IAAQC,EAAmDD,EAAnDC,MAAOC,EAA4CF,EAA5CE,YAAaC,EAA+BH,EAA/BG,aAAcC,EAAiBJ,EAAjBI,aACpCC,EAAM,yCAAqCH,GAC3CI,EAAQC,KAAKC,MAAqB,GAAfL,GACnBM,EAAOL,EAAeA,EAAaM,MAAM,EAAG,GAAK,OAC3D,OACI,eAAkBd,UAAWC,EAA7B,UACC,UAAC,KAAD,CAAMc,GAAE,kBAAaX,EAAKY,IAAMC,MAAO,CAACC,KAAMpB,GAAUE,UAAWC,EAAnE,WACG,gBAAKkB,IAAKV,EAAQW,IAAKf,KACvB,iBAAKL,UAAWC,EAAhB,WACI,0BAAKG,EAAKC,MAAV,IAAkBQ,EAAlB,QACA,0BAAG,kCAAcH,EAAjB,cALCN,EAAKY,GAShB,OAIb,C,2MC5BKK,EAAc,mCACPC,EAAe,mCAAG,6FACrBC,EADqB,kEAC6CF,GAD7C,kBAGAG,IAAAA,IAAUD,GAHV,cAGjBE,EAHiB,yBAIhBA,EAASC,KAAKC,SAJE,gCAKpBC,QAAQC,IAAI,SALQ,yDAAH,qDAQfC,EAAc,mCAAG,WAAOC,GAAP,gFACpBR,EADoB,4DACwCF,EADxC,iCAC4EU,EAD5E,iDAGCP,IAAAA,IAAUD,GAHX,cAGhBE,EAHgB,yBAIfA,EAASC,KAAKC,SAJC,gCAKnBC,QAAQC,IAAI,SALO,yDAAH,sDAQdG,EAAW,mCAAG,WAAOhB,GAAP,gFACjBO,EADiB,6CAC4BP,EAD5B,oBAC0CK,EAD1C,qCAGIG,IAAAA,IAAUD,GAHd,cAGbE,EAHa,yBAIZA,EAASC,MAJG,gCAKhBE,QAAQC,IAAI,SALI,yDAAH,sDAQXI,EAAS,mCAAG,WAAOjB,GAAP,gFACfO,EADe,6CAC8BP,EAD9B,4BACoDK,EADpD,qCAGMG,IAAAA,IAAUD,GAHhB,cAGXE,EAHW,yBAIVA,EAASC,KAAKQ,MAJJ,gCAKdN,QAAQC,IAAI,SALE,yDAAH,sDAQTM,EAAY,mCAAG,WAAOnB,GAAP,gFAClBO,EADkB,6CAC2BP,EAD3B,4BACiDK,EADjD,4CAGGG,IAAAA,IAAUD,GAHb,cAGdE,EAHc,yBAIbA,EAASC,KAAKC,SAJD,gCAKjBC,QAAQC,IAAI,SALK,yDAAH,qD,+GClCzB,EAA4B,4B,SC0B5B,EAtBa,WACT,OAA0BO,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAOA,IALAC,EAAAA,EAAAA,YAAU,YACNjB,EAAAA,EAAAA,MAAkBkB,KAAKF,EAE1B,GAAE,IAECD,EAAMnC,OAGV,OACI,iCACA,eAAIF,UAAWC,EAAf,6BACA,SAACwC,EAAA,EAAD,CAAW5C,QAASwC,MAI3B,C","sources":["webpack://react-homework-template/./src/components/FilmsList/filmsList.module.scss?81c7","components/FilmsList/FilmsList.jsx","components/services/API.jsx","webpack://react-homework-template/./src/pages/homePage/homePage.module.scss?5729","pages/homePage/HomePage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"filmsList_container__XtPzZ\",\"list\":\"filmsList_list__c9Ue9\",\"item\":\"filmsList_item__Zpca8\",\"link\":\"filmsList_link__+wHVA\",\"textWrapper\":\"filmsList_textWrapper__nltf-\"};","import { Link,  useLocation } from \"react-router-dom\"\nimport s from '../FilmsList/filmsList.module.scss'\n\n\n\nconst FilmsList = ({options}) => {\n    \n    const location = useLocation()\n    return(\n        <div className={s.container}>\n        <ul className={s.list}>\n            {options.length > 0 && options.map(film => {\n                const { title, poster_path, vote_average, release_date } = film;\n                const poster = `https://image.tmdb.org/t/p/w500${poster_path}`;\n                const score = Math.floor(vote_average * 10);\n                const year = release_date ? release_date.slice(0, 4) : \"year\" ;\n            return(\n                <li key={film.id} className={s.item}>\n                 <Link to={`/movies/${film.id}`} state={{prev: location}}className={s.link}>\n                    <img src={poster} alt={title} />\n                    <div className={s.textWrapper}>\n                        <h2>{film.title}({year})</h2>\n                        <p><b>Score:</b>{score}%</p>\n                    </div>\n                    \n                 </Link></li>\n            )})}\n        </ul>\n        </div>\n    )\n}\n\nexport default FilmsList","import axios from 'axios'\n\nconst PRIVATE_KEY = \"19058b9145b7ba2d69dc054625243cc3\"\nexport const fetchTrendFimls = async () => {\n    const link = `https://api.themoviedb.org/3/trending/movie/day?api_key=${PRIVATE_KEY}`\n    try{\n        const response = await axios.get(link)\n        return response.data.results\n    }catch{console.log(\"Error\")}\n}   \n\nexport const fetchQueryFilm = async (value) => {\n    const link = `https://api.themoviedb.org/3/search/movie?api_key=${PRIVATE_KEY}&language=en-US&query=${value}&page=1&include_adult=false`\n    try{\n        const response = await axios.get(link)\n        return response.data.results\n    }catch{console.log(\"Error\")}\n}\n\nexport const fetchFilmId = async (id) => {\n    const link = `https://api.themoviedb.org/3/movie/${id}?api_key=${PRIVATE_KEY}&language=en-US`\n    try{\n        const response = await axios.get(link)\n        return response.data\n    }catch{console.log(\"Error\")}\n}\n\nexport const fetchCast = async (id) => {\n    const link = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${PRIVATE_KEY}&language=en-US`\n    try{\n        const response = await axios.get(link)\n        return response.data.cast\n    }catch{console.log(\"Error\")}\n}\n\nexport const fetchReviews = async (id) => {\n    const link = `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${PRIVATE_KEY}&language=en-US&page=1`\n    try{\n        const response = await axios.get(link)\n        return response.data.results\n    }catch{console.log(\"Error\")}\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"homeTitle\":\"homePage_homeTitle__waUpN\"};","import FilmsList from \"components/FilmsList\"\nimport {fetchTrendFimls} from \"components/services/API\"\nimport { useEffect, useState } from \"react\"\nimport s from '../homePage/homePage.module.scss'\n\nconst Home = () => {\n    const [films, setFilms] = useState([])\n\n    useEffect(() => {\n        fetchTrendFimls().then(setFilms)\n        // eslint-disable-next-line\n    }, [])\n\n    if(!films.length){\n        return\n    }\n    return(\n        <>\n        <h1 className={s.homeTitle}>Trending today</h1>\n        <FilmsList options={films} />\n        \n        </>\n    )\n}\n\n// films.length > 0 && \n\nexport default Home"],"names":["options","location","useLocation","className","s","length","map","film","title","poster_path","vote_average","release_date","poster","score","Math","floor","year","slice","to","id","state","prev","src","alt","PRIVATE_KEY","fetchTrendFimls","link","axios","response","data","results","console","log","fetchQueryFilm","value","fetchFilmId","fetchCast","cast","fetchReviews","useState","films","setFilms","useEffect","then","FilmsList"],"sourceRoot":""}